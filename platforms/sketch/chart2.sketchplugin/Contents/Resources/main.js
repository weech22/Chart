/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./platforms/sketch/src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack:///./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/mocha-js-delegate/index.js":
/*!*************************************************!*\
  !*** ./node_modules/mocha-js-delegate/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* globals MOClassDescription, NSObject, NSSelectorFromString, NSClassFromString, MOPropertyDescription */\n\nmodule.exports = function MochaDelegate(definition, superclass) {\n  var uniqueClassName =\n    'MochaJSDelegate_DynamicClass_' + NSUUID.UUID().UUIDString()\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(\n    uniqueClassName,\n    superclass || NSObject\n  )\n\n  // Storage\n  var handlers = {}\n  var ivars = {}\n\n  // Define an instance method\n  function setHandlerForSelector(selectorString, func) {\n    var handlerHasBeenSet = selectorString in handlers\n    var selector = NSSelectorFromString(selectorString)\n\n    handlers[selectorString] = func\n\n    /*\n      For some reason, Mocha acts weird about arguments: https://github.com/logancollins/Mocha/issues/28\n      We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n    */\n    if (!handlerHasBeenSet) {\n      var args = []\n      var regex = /:/g\n      while (regex.exec(selectorString)) {\n        args.push('arg' + args.length)\n      }\n\n      // eslint-disable-next-line no-eval\n      var dynamicFunction = eval(\n        '(function (' +\n          args.join(', ') +\n          ') { return handlers[selectorString].apply(this, arguments); })'\n      )\n\n      delegateClassDesc.addInstanceMethodWithSelector_function(\n        selector,\n        dynamicFunction\n      )\n    }\n  }\n\n  // define a property\n  function setIvar(key, value) {\n    var ivarHasBeenSet = key in handlers\n\n    ivars[key] = value\n\n    if (!ivarHasBeenSet) {\n      delegateClassDesc.addInstanceVariableWithName_typeEncoding(key, '@')\n      var description = MOPropertyDescription.new()\n      description.name = key\n      description.typeEncoding = '@'\n      description.weak = true\n      description.ivarName = key\n      delegateClassDesc.addProperty(description)\n    }\n  }\n\n  this.getClass = function() {\n    return NSClassFromString(uniqueClassName)\n  }\n\n  this.getClassInstance = function(instanceVariables) {\n    var instance = NSClassFromString(uniqueClassName).new()\n    Object.keys(ivars).forEach(function(key) {\n      instance[key] = ivars[key]\n    })\n    Object.keys(instanceVariables || {}).forEach(function(key) {\n      instance[key] = instanceVariables[key]\n    })\n    return instance\n  }\n  // alias\n  this.new = this.getClassInstance\n\n  // Convenience\n  if (typeof definition === 'object') {\n    Object.keys(definition).forEach(\n      function(key) {\n        if (typeof definition[key] === 'function') {\n          setHandlerForSelector(key, definition[key])\n        } else {\n          setIvar(key, definition[key])\n        }\n      }\n    )\n  }\n\n  delegateClassDesc.registerClass()\n}\n\n\n//# sourceURL=webpack:///./node_modules/mocha-js-delegate/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/browser-api.js":
/*!****************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/browser-api.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function parseHexColor(color) {\n  // Check the string for incorrect formatting.\n  if (!color || color[0] !== '#') {\n    if (\n      color &&\n      typeof color.isKindOfClass === 'function' &&\n      color.isKindOfClass(NSColor)\n    ) {\n      return color\n    }\n    throw new Error(\n      'Incorrect color formating. It should be an hex color: #RRGGBBAA'\n    )\n  }\n\n  // append FF if alpha channel is not specified.\n  var source = color.substr(1)\n  if (source.length === 3) {\n    source += 'F'\n  } else if (source.length === 6) {\n    source += 'FF'\n  }\n  // Convert the string from #FFF format to #FFFFFF format.\n  var hex\n  if (source.length === 4) {\n    for (var i = 0; i < 4; i += 1) {\n      hex += source[i]\n      hex += source[i]\n    }\n  } else if (source.length === 8) {\n    hex = source\n  } else {\n    return NSColor.whiteColor()\n  }\n\n  var r = parseInt(hex.slice(0, 2), 16)\n  var g = parseInt(hex.slice(2, 4), 16)\n  var b = parseInt(hex.slice(4, 6), 16)\n  var a = parseInt(hex.slice(6, 8), 16)\n\n  return NSColor.colorWithSRGBRed_green_blue_alpha(r, g, b, a)\n}\n\nmodule.exports = function(browserWindow, panel, webview) {\n  // keep reference to the subviews\n  browserWindow._panel = panel\n  browserWindow._webview = webview\n  browserWindow._destroyed = false\n\n  browserWindow.destroy = function() {\n    return panel.close()\n  }\n\n  browserWindow.close = function() {\n    if (panel.delegate().utils && panel.delegate().utils.parentWindow) {\n      var shouldClose = true\n      browserWindow.emit('close', {\n        get defaultPrevented() {\n          return !shouldClose\n        },\n        preventDefault: function() {\n          shouldClose = false\n        },\n      })\n      if (shouldClose) {\n        panel.delegate().utils.parentWindow.endSheet(panel)\n      }\n      return\n    }\n\n    if (!browserWindow.isClosable()) {\n      return\n    }\n\n    panel.performClose(null)\n  }\n\n  function focus(focused) {\n    if (!browserWindow.isVisible()) {\n      return\n    }\n    if (focused) {\n      NSApplication.sharedApplication().activateIgnoringOtherApps(true)\n      panel.makeKeyAndOrderFront(null)\n    } else {\n      panel.orderBack(null)\n      NSApp.mainWindow().makeKeyAndOrderFront(null)\n    }\n  }\n\n  browserWindow.focus = focus.bind(this, true)\n  browserWindow.blur = focus.bind(this, false)\n\n  browserWindow.isFocused = function() {\n    return panel.isKeyWindow()\n  }\n\n  browserWindow.isDestroyed = function() {\n    return browserWindow._destroyed\n  }\n\n  browserWindow.show = function() {\n    // This method is supposed to put focus on window, however if the app does not\n    // have focus then \"makeKeyAndOrderFront\" will only show the window.\n    NSApp.activateIgnoringOtherApps(true)\n\n    if (panel.delegate().utils && panel.delegate().utils.parentWindow) {\n      return panel.delegate().utils.parentWindow.beginSheet_completionHandler(\n        panel,\n        __mocha__.createBlock_function('v16@?0q8', function() {\n          browserWindow.emit('closed')\n        })\n      )\n    }\n\n    return panel.makeKeyAndOrderFront(null)\n  }\n\n  browserWindow.showInactive = function() {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.hide = function() {\n    return panel.orderOut(null)\n  }\n\n  browserWindow.isVisible = function() {\n    return panel.isVisible()\n  }\n\n  browserWindow.isModal = function() {\n    return false\n  }\n\n  browserWindow.maximize = function() {\n    if (!browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n  browserWindow.unmaximize = function() {\n    if (browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n\n  browserWindow.isMaximized = function() {\n    if ((panel.styleMask() & NSResizableWindowMask) !== 0) {\n      return panel.isZoomed()\n    }\n    var rectScreen = NSScreen.mainScreen().visibleFrame()\n    var rectWindow = panel.frame()\n    return (\n      rectScreen.origin.x == rectWindow.origin.x &&\n      rectScreen.origin.y == rectWindow.origin.y &&\n      rectScreen.size.width == rectWindow.size.width &&\n      rectScreen.size.height == rectWindow.size.height\n    )\n  }\n\n  browserWindow.minimize = function() {\n    return panel.miniaturize(null)\n  }\n\n  browserWindow.restore = function() {\n    return panel.deminiaturize(null)\n  }\n\n  browserWindow.isMinimized = function() {\n    return panel.isMiniaturized()\n  }\n\n  browserWindow.setFullScreen = function(fullscreen) {\n    if (fullscreen !== browserWindow.isFullscreen()) {\n      panel.toggleFullScreen(null)\n    }\n  }\n\n  browserWindow.isFullscreen = function() {\n    return panel.styleMask() & NSFullScreenWindowMask\n  }\n\n  browserWindow.setAspectRatio = function(aspectRatio /* , extraSize */) {\n    // Reset the behaviour to default if aspect_ratio is set to 0 or less.\n    if (aspectRatio > 0.0) {\n      panel.setAspectRatio(NSMakeSize(aspectRatio, 1.0))\n    } else {\n      panel.setResizeIncrements(NSMakeSize(1.0, 1.0))\n    }\n  }\n\n  browserWindow.setBounds = function(bounds, animate) {\n    if (!bounds) {\n      return\n    }\n\n    // Do nothing if in fullscreen mode.\n    if (browserWindow.isFullscreen()) {\n      return\n    }\n\n    const newBounds = Object.assign(browserWindow.getBounds(), bounds)\n\n    // TODO: Check size constraints since setFrame does not check it.\n    // var size = bounds.size\n    // size.SetToMax(GetMinimumSize());\n    // gfx::Size max_size = GetMaximumSize();\n    // if (!max_size.IsEmpty())\n    //   size.SetToMin(max_size);\n\n    var cocoaBounds = NSMakeRect(\n      newBounds.x,\n      0,\n      newBounds.width,\n      newBounds.height\n    )\n    // Flip Y coordinates based on the primary screen\n    var screen = NSScreen.screens().firstObject()\n    cocoaBounds.origin.y = NSHeight(screen.frame()) - newBounds.y\n\n    panel.setFrame_display_animate(cocoaBounds, true, animate)\n  }\n\n  browserWindow.getBounds = function() {\n    const cocoaBounds = panel.frame()\n    var mainScreenRect = NSScreen.screens()\n      .firstObject()\n      .frame()\n    return {\n      x: cocoaBounds.origin.x,\n      y: Math.round(NSHeight(mainScreenRect) - cocoaBounds.origin.y),\n      width: cocoaBounds.size.width,\n      height: cocoaBounds.size.height,\n    }\n  }\n\n  browserWindow.setContentBounds = function(bounds, animate) {\n    // TODO:\n    browserWindow.setBounds(bounds, animate)\n  }\n\n  browserWindow.getContentBounds = function() {\n    // TODO:\n    return browserWindow.getBounds()\n  }\n\n  browserWindow.setSize = function(width, height, animate) {\n    // TODO: handle resizing around center\n    return browserWindow.setBounds({ width: width, height: height }, animate)\n  }\n\n  browserWindow.getSize = function() {\n    var bounds = browserWindow.getBounds()\n    return [bounds.width, bounds.height]\n  }\n\n  browserWindow.setContentSize = function(width, height, animate) {\n    // TODO: handle resizing around center\n    return browserWindow.setContentBounds(\n      { width: width, height: height },\n      animate\n    )\n  }\n\n  browserWindow.getContentSize = function() {\n    var bounds = browserWindow.getContentBounds()\n    return [bounds.width, bounds.height]\n  }\n\n  browserWindow.setMinimumSize = function(width, height) {\n    const minSize = CGSizeMake(width, height)\n    panel.setContentMinSize(minSize)\n  }\n\n  browserWindow.getMinimumSize = function() {\n    const size = panel.contentMinSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setMaximumSize = function(width, height) {\n    const maxSize = CGSizeMake(width, height)\n    panel.setContentMaxSize(maxSize)\n  }\n\n  browserWindow.getMaximumSize = function() {\n    const size = panel.contentMaxSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setResizable = function(resizable) {\n    return browserWindow._setStyleMask(resizable, NSResizableWindowMask)\n  }\n\n  browserWindow.isResizable = function() {\n    return panel.styleMask() & NSResizableWindowMask\n  }\n\n  browserWindow.setMovable = function(movable) {\n    return panel.setMovable(movable)\n  }\n  browserWindow.isMovable = function() {\n    return panel.isMovable()\n  }\n\n  browserWindow.setMinimizable = function(minimizable) {\n    return browserWindow._setStyleMask(minimizable, NSMiniaturizableWindowMask)\n  }\n\n  browserWindow.isMinimizable = function() {\n    return panel.styleMask() & NSMiniaturizableWindowMask\n  }\n\n  browserWindow.setMaximizable = function(maximizable) {\n    if (panel.standardWindowButton(NSWindowZoomButton)) {\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(maximizable)\n    }\n  }\n\n  browserWindow.isMaximizable = function() {\n    return (\n      panel.standardWindowButton(NSWindowZoomButton) &&\n      panel.standardWindowButton(NSWindowZoomButton).isEnabled()\n    )\n  }\n\n  browserWindow.setFullScreenable = function(fullscreenable) {\n    browserWindow._setCollectionBehavior(\n      fullscreenable,\n      NSWindowCollectionBehaviorFullScreenPrimary\n    )\n    // On EL Capitan this flag is required to hide fullscreen button.\n    browserWindow._setCollectionBehavior(\n      !fullscreenable,\n      NSWindowCollectionBehaviorFullScreenAuxiliary\n    )\n  }\n\n  browserWindow.isFullScreenable = function() {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorFullScreenPrimary\n  }\n\n  browserWindow.setClosable = function(closable) {\n    browserWindow._setStyleMask(closable, NSClosableWindowMask)\n  }\n\n  browserWindow.isClosable = function() {\n    return panel.styleMask() & NSClosableWindowMask\n  }\n\n  browserWindow.setAlwaysOnTop = function(top, level, relativeLevel) {\n    var windowLevel = NSNormalWindowLevel\n    var maxWindowLevel = CGWindowLevelForKey(kCGMaximumWindowLevelKey)\n    var minWindowLevel = CGWindowLevelForKey(kCGMinimumWindowLevelKey)\n\n    if (top) {\n      if (level === 'normal') {\n        windowLevel = NSNormalWindowLevel\n      } else if (level === 'torn-off-menu') {\n        windowLevel = NSTornOffMenuWindowLevel\n      } else if (level === 'modal-panel') {\n        windowLevel = NSModalPanelWindowLevel\n      } else if (level === 'main-menu') {\n        windowLevel = NSMainMenuWindowLevel\n      } else if (level === 'status') {\n        windowLevel = NSStatusWindowLevel\n      } else if (level === 'pop-up-menu') {\n        windowLevel = NSPopUpMenuWindowLevel\n      } else if (level === 'screen-saver') {\n        windowLevel = NSScreenSaverWindowLevel\n      } else if (level === 'dock') {\n        // Deprecated by macOS, but kept for backwards compatibility\n        windowLevel = NSDockWindowLevel\n      } else {\n        windowLevel = NSFloatingWindowLevel\n      }\n    }\n\n    var newLevel = windowLevel + (relativeLevel || 0)\n    if (newLevel >= minWindowLevel && newLevel <= maxWindowLevel) {\n      panel.setLevel(newLevel)\n    } else {\n      throw new Error(\n        'relativeLevel must be between ' +\n          minWindowLevel +\n          ' and ' +\n          maxWindowLevel\n      )\n    }\n  }\n\n  browserWindow.isAlwaysOnTop = function() {\n    return panel.level() !== NSNormalWindowLevel\n  }\n\n  browserWindow.moveTop = function() {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.center = function() {\n    panel.center()\n  }\n\n  browserWindow.setPosition = function(x, y, animate) {\n    return browserWindow.setBounds({ x: x, y: y }, animate)\n  }\n\n  browserWindow.getPosition = function() {\n    var bounds = browserWindow.getBounds()\n    return [bounds.x, bounds.y]\n  }\n\n  browserWindow.setTitle = function(title) {\n    panel.setTitle(title)\n  }\n\n  browserWindow.getTitle = function() {\n    return String(panel.title())\n  }\n\n  var attentionRequestId = 0\n  browserWindow.flashFrame = function(flash) {\n    if (flash) {\n      attentionRequestId = NSApp.requestUserAttention(NSInformationalRequest)\n    } else {\n      NSApp.cancelUserAttentionRequest(attentionRequestId)\n      attentionRequestId = 0\n    }\n  }\n\n  browserWindow.getNativeWindowHandle = function() {\n    return panel\n  }\n\n  browserWindow.getNativeWebViewHandle = function() {\n    return webview\n  }\n\n  browserWindow.loadURL = function(url) {\n    // When frameLocation is a file, prefix it with the Sketch Resources path\n    if (/^(?!https?|file).*\\.html?$/.test(url)) {\n      if (typeof __command !== 'undefined' && __command.pluginBundle()) {\n        url =\n          'file://' +\n          __command\n            .pluginBundle()\n            .urlForResourceNamed(url)\n            .path()\n      }\n    }\n\n    if (/^file:\\/\\/.*\\.html?$/.test(url)) {\n      // ensure URLs containing spaces are properly handled\n      url = NSString.alloc().initWithString(url)\n      url = url.stringByAddingPercentEncodingWithAllowedCharacters(\n        NSCharacterSet.URLQueryAllowedCharacterSet()\n      )\n      webview.loadFileURL_allowingReadAccessToURL(\n        NSURL.URLWithString(url),\n        NSURL.URLWithString('file:///')\n      )\n      return\n    }\n\n    const properURL = NSURL.URLWithString(url)\n    const urlRequest = NSURLRequest.requestWithURL(properURL)\n\n    webview.loadRequest(urlRequest)\n  }\n\n  browserWindow.reload = function() {\n    webview.reload()\n  }\n\n  browserWindow.setHasShadow = function(hasShadow) {\n    return panel.setHasShadow(hasShadow)\n  }\n\n  browserWindow.hasShadow = function() {\n    return panel.hasShadow()\n  }\n\n  browserWindow.setOpacity = function(opacity) {\n    return panel.setAlphaValue(opacity)\n  }\n\n  browserWindow.getOpacity = function() {\n    return panel.alphaValue()\n  }\n\n  browserWindow.setVisibleOnAllWorkspaces = function(visible) {\n    return browserWindow._setCollectionBehavior(\n      visible,\n      NSWindowCollectionBehaviorCanJoinAllSpaces\n    )\n  }\n\n  browserWindow.isVisibleOnAllWorkspaces = function() {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorCanJoinAllSpaces\n  }\n\n  browserWindow.setIgnoreMouseEvents = function(ignore) {\n    return panel.setIgnoresMouseEvents(ignore)\n  }\n\n  browserWindow.setContentProtection = function(enable) {\n    panel.setSharingType(enable ? NSWindowSharingNone : NSWindowSharingReadOnly)\n  }\n\n  browserWindow.setAutoHideCursor = function(autoHide) {\n    panel.setDisableAutoHideCursor(autoHide)\n  }\n\n  browserWindow.setVibrancy = function(type) {\n    var effectView = browserWindow._vibrantView\n\n    if (!type) {\n      if (effectView == null) {\n        return\n      }\n\n      effectView.removeFromSuperview()\n      panel.setVibrantView(null)\n      return\n    }\n\n    if (effectView == null) {\n      var contentView = panel.contentView()\n      effectView = NSVisualEffectView.alloc().initWithFrame(\n        contentView.bounds()\n      )\n      browserWindow._vibrantView = effectView\n\n      effectView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n      effectView.setBlendingMode(NSVisualEffectBlendingModeBehindWindow)\n      effectView.setState(NSVisualEffectStateActive)\n      effectView.setFrame(contentView.bounds())\n      contentView.addSubview_positioned_relativeTo(\n        effectView,\n        NSWindowBelow,\n        null\n      )\n    }\n\n    var vibrancyType = NSVisualEffectMaterialLight\n\n    if (type === 'appearance-based') {\n      vibrancyType = NSVisualEffectMaterialAppearanceBased\n    } else if (type === 'light') {\n      vibrancyType = NSVisualEffectMaterialLight\n    } else if (type === 'dark') {\n      vibrancyType = NSVisualEffectMaterialDark\n    } else if (type === 'titlebar') {\n      vibrancyType = NSVisualEffectMaterialTitlebar\n    } else if (type === 'selection') {\n      vibrancyType = NSVisualEffectMaterialSelection\n    } else if (type === 'menu') {\n      vibrancyType = NSVisualEffectMaterialMenu\n    } else if (type === 'popover') {\n      vibrancyType = NSVisualEffectMaterialPopover\n    } else if (type === 'sidebar') {\n      vibrancyType = NSVisualEffectMaterialSidebar\n    } else if (type === 'medium-light') {\n      vibrancyType = NSVisualEffectMaterialMediumLight\n    } else if (type === 'ultra-dark') {\n      vibrancyType = NSVisualEffectMaterialUltraDark\n    }\n\n    effectView.setMaterial(vibrancyType)\n  }\n\n  browserWindow._setBackgroundColor = function(colorName) {\n    var color = parseHexColor(colorName)\n    webview.setValue_forKey(false, 'drawsBackground')\n    panel.backgroundColor = color\n  }\n\n  browserWindow._invalidate = function() {\n    panel.flushWindow()\n    panel.contentView().setNeedsDisplay(true)\n  }\n\n  browserWindow._setStyleMask = function(on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setStyleMask(panel.styleMask() | flag)\n    } else {\n      panel.setStyleMask(panel.styleMask() & ~flag)\n    }\n    // Change style mask will make the zoom button revert to default, probably\n    // a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._setCollectionBehavior = function(on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setCollectionBehavior(panel.collectionBehavior() | flag)\n    } else {\n      panel.setCollectionBehavior(panel.collectionBehavior() & ~flag)\n    }\n    // Change collectionBehavior will make the zoom button revert to default,\n    // probably a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._showWindowButton = function(button) {\n    var view = panel.standardWindowButton(button)\n    view.superview().addSubview_positioned_relative(view, NSWindowAbove, null)\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/browser-api.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/constants.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  JS_BRIDGE: '__skpm_sketchBridge',\n  JS_BRIDGE_RESULT_SUCCESS: '__skpm_sketchBridge_success',\n  JS_BRIDGE_RESULT_ERROR: '__skpm_sketchBridge_error',\n  START_MOVING_WINDOW: '__skpm_startMovingWindow',\n  EXECUTE_JAVASCRIPT: '__skpm_executeJS',\n  EXECUTE_JAVASCRIPT_SUCCESS: '__skpm_executeJS_success_',\n  EXECUTE_JAVASCRIPT_ERROR: '__skpm_executeJS_error_',\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/constants.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/dispatch-first-click.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/dispatch-first-click.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var tagsToFocus =\n  '[\"text\", \"textarea\", \"date\", \"datetime-local\", \"email\", \"number\", \"month\", \"password\", \"search\", \"tel\", \"time\", \"url\", \"week\" ]'\n\nmodule.exports = function(webView, event) {\n  var point = webView.convertPoint_fromView(event.locationInWindow(), null)\n  return (\n    'var el = document.elementFromPoint(' + // get the DOM element that match the event\n    point.x +\n    ', ' +\n    point.y +\n    '); ' +\n    'if (el && el.tagName === \"SELECT\") {' + // select needs special handling\n    '  var event = document.createEvent(\"MouseEvents\");' +\n    '  event.initMouseEvent(\"mousedown\", true, true, window);' +\n    '  el.dispatchEvent(event);' +\n    '} else if (el && ' + // some tags need to be focused instead of clicked\n    tagsToFocus +\n    '.indexOf(el.type) >= 0 && ' +\n    'el.focus' +\n    ') {' +\n    'el.focus();' + // so focus them\n    '} else if (el) {' +\n    'el.dispatchEvent(new Event(\"click\", {bubbles: true}))' + // click the others\n    '}'\n  )\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/dispatch-first-click.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/execute-javascript.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/execute-javascript.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CONSTANTS = __webpack_require__(/*! ./constants */ \"./node_modules/sketch-module-web-view/lib/constants.js\")\n\nmodule.exports = function(webview, browserWindow) {\n  function executeJavaScript(script, userGesture, callback) {\n    if (typeof userGesture === 'function') {\n      callback = userGesture\n      userGesture = false\n    }\n    var fiber = coscript.createFiber()\n\n    // if the webview is not ready yet, defer the execution until it is\n    if (\n      webview.navigationDelegate().state &&\n      webview.navigationDelegate().state.wasReady == 0\n    ) {\n      return new Promise(function(resolve, reject) {\n        browserWindow.once('ready-to-show', function() {\n          executeJavaScript(script, userGesture, callback)\n            .then(resolve)\n            .catch(reject)\n          fiber.cleanup()\n        })\n      })\n    }\n\n    return new Promise(function(resolve, reject) {\n      var requestId = Math.random()\n\n      browserWindow.webContents.on(\n        CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS + requestId,\n        function(res) {\n          try {\n            if (callback) {\n              callback(null, res)\n            }\n            resolve(res)\n          } catch (err) {\n            reject(err)\n          }\n          fiber.cleanup()\n        }\n      )\n      browserWindow.webContents.on(\n        CONSTANTS.EXECUTE_JAVASCRIPT_ERROR + requestId,\n        function(err) {\n          try {\n            if (callback) {\n              callback(err)\n              resolve()\n            } else {\n              reject(err)\n            }\n          } catch (err2) {\n            reject(err2)\n          }\n          fiber.cleanup()\n        }\n      )\n\n      webview.evaluateJavaScript_completionHandler(\n        module.exports.wrapScript(script, requestId),\n        null\n      )\n    })\n  }\n\n  return executeJavaScript\n}\n\nmodule.exports.wrapScript = function(script, requestId) {\n  return (\n    'window.' +\n    CONSTANTS.EXECUTE_JAVASCRIPT +\n    '(' +\n    requestId +\n    ', ' +\n    JSON.stringify(script) +\n    ')'\n  )\n}\n\nmodule.exports.injectScript = function(webView) {\n  var source =\n    'window.' +\n    CONSTANTS.EXECUTE_JAVASCRIPT +\n    ' = function(id, script) {' +\n    '  try {' +\n    '    var res = eval(script);' +\n    '    if (res && typeof res.then === \"function\" && typeof res.catch === \"function\") {' +\n    '      res.then(function (res2) {' +\n    '        window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS +\n    '\" + id, res2);' +\n    '      })' +\n    '      .catch(function (err) {' +\n    '        window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_ERROR +\n    '\" + id, err);' +\n    '      })' +\n    '    } else {' +\n    '      window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS +\n    '\" + id, res);' +\n    '    }' +\n    '  } catch (err) {' +\n    '    window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_ERROR +\n    '\" + id, err);' +\n    '  }' +\n    '}'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView\n    .configuration()\n    .userContentController()\n    .addUserScript(script)\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/execute-javascript.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/fitSubview.js":
/*!***************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/fitSubview.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function addEdgeConstraint(edge, subview, view, constant) {\n  view.addConstraint(\n    NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n      subview,\n      edge,\n      NSLayoutRelationEqual,\n      view,\n      edge,\n      1,\n      constant\n    )\n  )\n}\nmodule.exports = function fitSubviewToView(subview, view, constants) {\n  constants = constants || []\n  subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n  addEdgeConstraint(NSLayoutAttributeLeft, subview, view, constants[0] || 0)\n  addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[1] || 0)\n  addEdgeConstraint(NSLayoutAttributeRight, subview, view, constants[2] || 0)\n  addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[3] || 0)\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/fitSubview.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* let's try to match the API from Electron's Browser window\n(https://github.com/electron/electron/blob/master/docs/api/browser-window.md) */\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\")\nvar buildBrowserAPI = __webpack_require__(/*! ./browser-api */ \"./node_modules/sketch-module-web-view/lib/browser-api.js\")\nvar buildWebAPI = __webpack_require__(/*! ./webview-api */ \"./node_modules/sketch-module-web-view/lib/webview-api.js\")\nvar fitSubviewToView = __webpack_require__(/*! ./fitSubview */ \"./node_modules/sketch-module-web-view/lib/fitSubview.js\")\nvar dispatchFirstClick = __webpack_require__(/*! ./dispatch-first-click */ \"./node_modules/sketch-module-web-view/lib/dispatch-first-click.js\")\nvar injectClientMessaging = __webpack_require__(/*! ./inject-client-messaging */ \"./node_modules/sketch-module-web-view/lib/inject-client-messaging.js\")\nvar movableArea = __webpack_require__(/*! ./movable-area */ \"./node_modules/sketch-module-web-view/lib/movable-area.js\")\nvar executeJavaScript = __webpack_require__(/*! ./execute-javascript */ \"./node_modules/sketch-module-web-view/lib/execute-javascript.js\")\nvar setDelegates = __webpack_require__(/*! ./set-delegates */ \"./node_modules/sketch-module-web-view/lib/set-delegates.js\")\n\nfunction BrowserWindow(options) {\n  options = options || {}\n\n  var identifier = options.identifier || NSUUID.UUID().UUIDString()\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  var existingBrowserWindow = BrowserWindow.fromId(identifier)\n\n  // if we already have a window opened, reuse it\n  if (existingBrowserWindow) {\n    return existingBrowserWindow\n  }\n\n  var browserWindow = new EventEmitter()\n  browserWindow.id = identifier\n\n  if (options.modal && !options.parent) {\n    throw new Error('A modal needs to have a parent.')\n  }\n\n  // Long-running script\n  var fiber = coscript.createFiber()\n\n  // Window size\n  var width = options.width || 800\n  var height = options.height || 600\n  var mainScreenRect = NSScreen.screens()\n    .firstObject()\n    .frame()\n  var cocoaBounds = NSMakeRect(\n    typeof options.x !== 'undefined'\n      ? options.x\n      : Math.round((NSWidth(mainScreenRect) - width) / 2),\n    typeof options.y !== 'undefined'\n      ? NSHeight(mainScreenRect) - options.y\n      : Math.round((NSHeight(mainScreenRect) - height) / 2),\n    width,\n    height\n  )\n\n  if (options.titleBarStyle && options.titleBarStyle !== 'default') {\n    options.frame = false\n  }\n\n  var useStandardWindow = options.windowType !== 'textured'\n  var styleMask = NSTitledWindowMask\n\n  // this is commented out because the toolbar doesn't appear otherwise :thinking-face:\n  // if (!useStandardWindow || options.frame === false) {\n  //   styleMask = NSFullSizeContentViewWindowMask\n  // }\n  if (options.minimizable !== false) {\n    styleMask |= NSMiniaturizableWindowMask\n  }\n  if (options.closable !== false) {\n    styleMask |= NSClosableWindowMask\n  }\n  if (options.resizable !== false) {\n    styleMask |= NSResizableWindowMask\n  }\n  if (!useStandardWindow || options.transparent || options.frame === false) {\n    styleMask |= NSTexturedBackgroundWindowMask\n  }\n\n  var panel = NSPanel.alloc().initWithContentRect_styleMask_backing_defer(\n    cocoaBounds,\n    styleMask,\n    NSBackingStoreBuffered,\n    true\n  )\n\n  var wkwebviewConfig = WKWebViewConfiguration.alloc().init()\n  var webView = WKWebView.alloc().initWithFrame_configuration(\n    CGRectMake(0, 0, options.width || 800, options.height || 600),\n    wkwebviewConfig\n  )\n  injectClientMessaging(webView)\n  webView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n\n  buildBrowserAPI(browserWindow, panel, webView)\n  buildWebAPI(browserWindow, panel, webView)\n  setDelegates(browserWindow, panel, webView, options)\n\n  if (options.windowType === 'desktop') {\n    panel.setLevel(kCGDesktopWindowLevel - 1)\n    // panel.setCanBecomeKeyWindow(false)\n    panel.setCollectionBehavior(\n      NSWindowCollectionBehaviorCanJoinAllSpaces |\n        NSWindowCollectionBehaviorStationary |\n        NSWindowCollectionBehaviorIgnoresCycle\n    )\n  }\n\n  if (\n    typeof options.minWidth !== 'undefined' ||\n    typeof options.minHeight !== 'undefined'\n  ) {\n    browserWindow.setMinimumSize(options.minWidth || 0, options.minHeight || 0)\n  }\n\n  if (\n    typeof options.maxWidth !== 'undefined' ||\n    typeof options.maxHeight !== 'undefined'\n  ) {\n    browserWindow.setMaximumSize(\n      options.maxWidth || 10000,\n      options.maxHeight || 10000\n    )\n  }\n\n  // if (options.focusable === false) {\n  //   panel.setCanBecomeKeyWindow(false)\n  // }\n\n  if (options.transparent || options.frame === false) {\n    panel.titlebarAppearsTransparent = true\n    panel.titleVisibility = NSWindowTitleHidden\n    panel.setOpaque(0)\n    panel.isMovableByWindowBackground = true\n    var toolbar2 = NSToolbar.alloc().initWithIdentifier(\n      'titlebarStylingToolbar'\n    )\n    toolbar2.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar2)\n  }\n\n  if (options.titleBarStyle === 'hiddenInset') {\n    var toolbar = NSToolbar.alloc().initWithIdentifier('titlebarStylingToolbar')\n    toolbar.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar)\n  }\n\n  if (options.frame === false || !options.useContentSize) {\n    browserWindow.setSize(width, height)\n  }\n\n  if (options.center) {\n    browserWindow.center()\n  }\n\n  if (options.alwaysOnTop) {\n    browserWindow.setAlwaysOnTop(true)\n  }\n\n  if (options.fullscreen) {\n    browserWindow.setFullScreen(true)\n  }\n  browserWindow.setFullScreenable(!!options.fullscreenable)\n\n  let title = options.title\n  if (options.frame === false) {\n    title = undefined\n  } else if (\n    typeof title === 'undefined' &&\n    typeof __command !== 'undefined' &&\n    __command.pluginBundle()\n  ) {\n    title = __command.pluginBundle().name()\n  }\n\n  if (title) {\n    browserWindow.setTitle(title)\n  }\n\n  var backgroundColor = options.backgroundColor\n  if (options.transparent) {\n    backgroundColor = NSColor.clearColor()\n  }\n  if (!backgroundColor && options.frame === false && options.vibrancy) {\n    backgroundColor = NSColor.clearColor()\n  }\n\n  browserWindow._setBackgroundColor(\n    backgroundColor || NSColor.windowBackgroundColor()\n  )\n\n  if (options.hasShadow === false) {\n    browserWindow.setHasShadow(false)\n  }\n\n  if (typeof options.opacity !== 'undefined') {\n    browserWindow.setOpacity(options.opacity)\n  }\n\n  options.webPreferences = options.webPreferences || {}\n\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.devTools !== false,\n      'developerExtrasEnabled'\n    )\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.javascript !== false,\n      'javaScriptEnabled'\n    )\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(!!options.webPreferences.plugins, 'plugInsEnabled')\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.minimumFontSize || 0,\n      'minimumFontSize'\n    )\n\n  if (options.webPreferences.zoomFactor) {\n    webView.setMagnification(options.webPreferences.zoomFactor)\n  }\n\n  var contentView = panel.contentView()\n\n  if (options.frame !== false) {\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n  } else {\n    // In OSX 10.10, adding subviews to the root view for the NSView hierarchy\n    // produces warnings. To eliminate the warnings, we resize the contentView\n    // to fill the window, and add subviews to that.\n    // http://crbug.com/380412\n    contentView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n    fitSubviewToView(contentView, contentView.superview())\n\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n\n    // The fullscreen button should always be hidden for frameless window.\n    if (panel.standardWindowButton(NSWindowFullScreenButton)) {\n      panel.standardWindowButton(NSWindowFullScreenButton).setHidden(true)\n    }\n\n    if (!options.titleBarStyle || options.titleBarStyle === 'default') {\n      // Hide the window buttons.\n      panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n      panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n      panel.standardWindowButton(NSWindowCloseButton).setHidden(true)\n\n      // Some third-party macOS utilities check the zoom button's enabled state to\n      // determine whether to show custom UI on hover, so we disable it here to\n      // prevent them from doing so in a frameless app window.\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(false)\n    }\n  }\n\n  if (options.vibrancy) {\n    browserWindow.setVibrancy(options.vibrancy)\n  }\n\n  // Set maximizable state last to ensure zoom button does not get reset\n  // by calls to other APIs.\n  browserWindow.setMaximizable(options.maximizable !== false)\n\n  panel.setHidesOnDeactivate(options.hidesOnDeactivate !== false)\n\n  if (options.remembersWindowFrame) {\n    panel.setFrameAutosaveName(identifier)\n    panel.setFrameUsingName_force(panel.frameAutosaveName(), false)\n  }\n\n  if (options.acceptsFirstMouse) {\n    browserWindow.on('focus', function(event) {\n      if (event.type() === NSEventTypeLeftMouseDown) {\n        browserWindow.webContents\n          .executeJavaScript(dispatchFirstClick(webView, event))\n          .catch(() => {})\n      }\n    })\n  }\n\n  executeJavaScript.injectScript(webView)\n  movableArea.injectScript(webView)\n  movableArea.setupHandler(browserWindow)\n\n  if (options.show !== false) {\n    browserWindow.show()\n  }\n\n  browserWindow.on('closed', function() {\n    browserWindow._destroyed = true\n    threadDictionary.removeObjectForKey(identifier)\n    var observer = threadDictionary[identifier + '.themeObserver']\n    if (observer) {\n      NSApplication.sharedApplication().removeObserver_forKeyPath(\n        observer,\n        'effectiveAppearance'\n      )\n      threadDictionary.removeObjectForKey(identifier + '.themeObserver')\n    }\n    fiber.cleanup()\n  })\n\n  threadDictionary[identifier] = panel\n\n  fiber.onCleanup(function() {\n    if (!browserWindow._destroyed) {\n      browserWindow.destroy()\n    }\n  })\n\n  return browserWindow\n}\n\nBrowserWindow.fromId = function(identifier) {\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  if (threadDictionary[identifier]) {\n    return BrowserWindow.fromPanel(threadDictionary[identifier], identifier)\n  }\n\n  return undefined\n}\n\nBrowserWindow.fromPanel = function(panel, identifier) {\n  var browserWindow = new EventEmitter()\n  browserWindow.id = identifier\n\n  if (!panel || !panel.contentView) {\n    throw new Error('needs to pass an NSPanel')\n  }\n\n  var webView = null\n  var subviews = panel.contentView().subviews()\n  for (var i = 0; i < subviews.length; i += 1) {\n    if (\n      !webView &&\n      !subviews[i].isKindOfClass(WKInspectorWKWebView) &&\n      subviews[i].isKindOfClass(WKWebView)\n    ) {\n      webView = subviews[i]\n    }\n  }\n\n  if (!webView) {\n    throw new Error('The panel needs to have a webview')\n  }\n\n  buildBrowserAPI(browserWindow, panel, webView)\n  buildWebAPI(browserWindow, panel, webView)\n\n  return browserWindow\n}\n\nmodule.exports = BrowserWindow\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/index.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/inject-client-messaging.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/inject-client-messaging.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CONSTANTS = __webpack_require__(/*! ./constants */ \"./node_modules/sketch-module-web-view/lib/constants.js\")\n\nmodule.exports = function(webView) {\n  var source =\n    'window.originalPostMessage = window.postMessage;' +\n    'window.postMessage = function(actionName) {' +\n    '  if (!actionName) {' +\n    \"    throw new Error('missing action name')\" +\n    '  }' +\n    '  var id = String(Math.random()).replace(\".\", \"\");' +\n    '    var args = [].slice.call(arguments);' +\n    '    args.unshift(id);' +\n    '  return new Promise(function (resolve, reject) {' +\n    '    window[\"' +\n    CONSTANTS.JS_BRIDGE_RESULT_SUCCESS +\n    '\" + id] = resolve;' +\n    '    window[\"' +\n    CONSTANTS.JS_BRIDGE_RESULT_ERROR +\n    '\" + id] = reject;' +\n    '    window.webkit.messageHandlers.' +\n    CONSTANTS.JS_BRIDGE +\n    '.postMessage(JSON.stringify(args));' +\n    '  });' +\n    '}'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView\n    .configuration()\n    .userContentController()\n    .addUserScript(script)\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/inject-client-messaging.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/movable-area.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/movable-area.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CONSTANTS = __webpack_require__(/*! ./constants */ \"./node_modules/sketch-module-web-view/lib/constants.js\")\n\nmodule.exports.injectScript = function(webView) {\n  var source =\n    '(function () {' +\n    \"document.addEventListener('mousedown', onMouseDown);\" +\n    '' +\n    'function shouldDrag(target) {' +\n    '  if (!target || (target.dataset || {}).appRegion === \"no-drag\") { return false }' +\n    '  if ((target.dataset || {}).appRegion === \"drag\") { return true }' +\n    '  return shouldDrag(target.parentElement)' +\n    '};' +\n    '' +\n    'function onMouseDown(e) {' +\n    '  if (e.button !== 0 || !shouldDrag(e.target)) { return }' +\n    '  window.postMessage(\"' +\n    CONSTANTS.START_MOVING_WINDOW +\n    '\");' +\n    '};' +\n    '})()'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView\n    .configuration()\n    .userContentController()\n    .addUserScript(script)\n}\n\nmodule.exports.setupHandler = function(browserWindow) {\n  var initialMouseLocation = null\n  var initialWindowPosition = null\n  var interval = null\n\n  function moveWindow() {\n    // if the user released the button, stop moving the window\n    if (!initialWindowPosition || NSEvent.pressedMouseButtons() !== 1) {\n      clearInterval(interval)\n      initialMouseLocation = null\n      initialWindowPosition = null\n      return\n    }\n\n    var mouse = NSEvent.mouseLocation()\n    browserWindow.setPosition(\n      initialWindowPosition.x + (mouse.x - initialMouseLocation.x),\n      initialWindowPosition.y + (initialMouseLocation.y - mouse.y), // y is inverted\n      false\n    )\n  }\n\n  browserWindow.webContents.on(CONSTANTS.START_MOVING_WINDOW, function() {\n    initialMouseLocation = NSEvent.mouseLocation()\n    var position = browserWindow.getPosition()\n    initialWindowPosition = {\n      x: position[0],\n      y: position[1],\n    }\n\n    interval = setInterval(moveWindow, 1000 / 60) // 60 fps\n  })\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/movable-area.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/parseWebArguments.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/parseWebArguments.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(webArguments) {\n  var args = null\n  try {\n    args = JSON.parse(webArguments)\n  } catch (e) {\n    // malformed arguments\n  }\n\n  if (\n    !args ||\n    !args.constructor ||\n    args.constructor !== Array ||\n    args.length == 0\n  ) {\n    return null\n  }\n\n  return args\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/parseWebArguments.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/set-delegates.js":
/*!******************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/set-delegates.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var ObjCClass = __webpack_require__(/*! mocha-js-delegate */ \"./node_modules/mocha-js-delegate/index.js\")\nvar parseWebArguments = __webpack_require__(/*! ./parseWebArguments */ \"./node_modules/sketch-module-web-view/lib/parseWebArguments.js\")\nvar CONSTANTS = __webpack_require__(/*! ./constants */ \"./node_modules/sketch-module-web-view/lib/constants.js\")\n\n// We create one ObjC class for ourselves here\nvar WindowDelegateClass\nvar NavigationDelegateClass\nvar WebScriptHandlerClass\nvar ThemeObserverClass\n\n// TODO: events\n// - 'page-favicon-updated'\n// - 'new-window'\n// - 'did-navigate-in-page'\n// - 'will-prevent-unload'\n// - 'crashed'\n// - 'unresponsive'\n// - 'responsive'\n// - 'destroyed'\n// - 'before-input-event'\n// - 'certificate-error'\n// - 'found-in-page'\n// - 'media-started-playing'\n// - 'media-paused'\n// - 'did-change-theme-color'\n// - 'update-target-url'\n// - 'cursor-changed'\n// - 'context-menu'\n// - 'select-bluetooth-device'\n// - 'paint'\n// - 'console-message'\n\nmodule.exports = function(browserWindow, panel, webview, options) {\n  if (!ThemeObserverClass) {\n    ThemeObserverClass = new ObjCClass({\n      utils: null,\n\n      'observeValueForKeyPath:ofObject:change:context:': function() {\n        this.utils.executeJavaScript(\n          \"document.body.classList.remove('__skpm-\" +\n            (typeof MSTheme !== 'undefined' && MSTheme.sharedTheme().isDark()\n              ? 'light'\n              : 'dark') +\n            \"'); document.body.classList.add('__skpm-\" +\n            (typeof MSTheme !== 'undefined' && MSTheme.sharedTheme().isDark()\n              ? 'dark'\n              : 'light') +\n            \"')\"\n        )\n      },\n    })\n  }\n\n  if (!WindowDelegateClass) {\n    WindowDelegateClass = new ObjCClass({\n      utils: null,\n      panel: null,\n\n      'windowDidResize:': function() {\n        this.utils.emit('resize')\n      },\n\n      'windowDidMiniaturize:': function() {\n        this.utils.emit('minimize')\n      },\n\n      'windowDidDeminiaturize:': function() {\n        this.utils.emit('restore')\n      },\n\n      'windowDidEnterFullScreen:': function() {\n        this.utils.emit('enter-full-screen')\n      },\n\n      'windowDidExitFullScreen:': function() {\n        this.utils.emit('leave-full-screen')\n      },\n\n      'windowDidMove:': function() {\n        this.utils.emit('move')\n        this.utils.emit('moved')\n      },\n\n      'windowShouldClose:': function() {\n        var shouldClose = 1\n        this.utils.emit('close', {\n          get defaultPrevented() {\n            return !shouldClose\n          },\n          preventDefault: function() {\n            shouldClose = 0\n          },\n        })\n        return shouldClose\n      },\n\n      'windowWillClose:': function() {\n        this.utils.emit('closed')\n      },\n\n      'windowDidBecomeKey:': function() {\n        this.utils.emit('focus', this.panel.currentEvent())\n      },\n\n      'windowDidResignKey:': function() {\n        this.utils.emit('blur')\n      },\n    })\n  }\n\n  if (!NavigationDelegateClass) {\n    NavigationDelegateClass = new ObjCClass({\n      state: {\n        wasReady: 0,\n      },\n      utils: null,\n\n      // // Called when the web view begins to receive web content.\n      'webView:didCommitNavigation:': function(webView) {\n        this.utils.emit('will-navigate', {}, String(String(webView.URL())))\n      },\n\n      // // Called when web content begins to load in a web view.\n      'webView:didStartProvisionalNavigation:': function() {\n        this.utils.emit('did-start-navigation')\n        this.utils.emit('did-start-loading')\n      },\n\n      // Called when a web view receives a server redirect.\n      'webView:didReceiveServerRedirectForProvisionalNavigation:': function() {\n        this.utils.emit('did-get-redirect-request')\n      },\n\n      // // Called when the web view needs to respond to an authentication challenge.\n      // 'webView:didReceiveAuthenticationChallenge:completionHandler:': function(\n      //   webView,\n      //   challenge,\n      //   completionHandler\n      // ) {\n      //   function callback(username, password) {\n      //     completionHandler(\n      //       0,\n      //       NSURLCredential.credentialWithUser_password_persistence(\n      //         username,\n      //         password,\n      //         1\n      //       )\n      //     )\n      //   }\n      //   var protectionSpace = challenge.protectionSpace()\n      //   this.utils.emit(\n      //     'login',\n      //     {},\n      //     {\n      //       method: String(protectionSpace.authenticationMethod()),\n      //       url: 'not implemented', // TODO:\n      //       referrer: 'not implemented', // TODO:\n      //     },\n      //     {\n      //       isProxy: !!protectionSpace.isProxy(),\n      //       scheme: String(protectionSpace.protocol()),\n      //       host: String(protectionSpace.host()),\n      //       port: Number(protectionSpace.port()),\n      //       realm: String(protectionSpace.realm()),\n      //     },\n      //     callback\n      //   )\n      // },\n\n      // Called when an error occurs during navigation.\n      // 'webView:didFailNavigation:withError:': function(\n      //   webView,\n      //   navigation,\n      //   error\n      // ) {},\n\n      // Called when an error occurs while the web view is loading content.\n      'webView:didFailProvisionalNavigation:withError:': function(\n        webView,\n        navigation,\n        error\n      ) {\n        this.utils.emit('did-fail-load', error)\n      },\n\n      // Called when the navigation is complete.\n      'webView:didFinishNavigation:': function() {\n        if (this.state.wasReady == 0) {\n          this.state.wasReady = 1\n          this.utils.emitBrowserEvent('ready-to-show')\n        }\n        this.utils.emit('did-navigate')\n        this.utils.emit('did-frame-navigate')\n        this.utils.emit('did-stop-loading')\n        this.utils.emit('did-finish-load')\n        this.utils.emit('did-frame-finish-load')\n      },\n\n      // Called when the web view’s web content process is terminated.\n      'webViewWebContentProcessDidTerminate:': function() {\n        this.utils.emit('dom-ready')\n      },\n\n      // Decides whether to allow or cancel a navigation.\n      // webView:decidePolicyForNavigationAction:decisionHandler:\n\n      // Decides whether to allow or cancel a navigation after its response is known.\n      // webView:decidePolicyForNavigationResponse:decisionHandler:\n    })\n  }\n\n  if (!WebScriptHandlerClass) {\n    WebScriptHandlerClass = new ObjCClass({\n      utils: null,\n      'userContentController:didReceiveScriptMessage:': function(_, message) {\n        var args = this.utils.parseWebArguments(String(message.body()))\n        if (!args) {\n          return\n        }\n        if (!args[0] || typeof args[0] !== 'string') {\n          return\n        }\n        args[0] = String(args[0])\n\n        this.utils.emit.apply(this, args)\n      },\n    })\n  }\n\n  var themeObserver = ThemeObserverClass.new({\n    utils: {\n      executeJavaScript(script) {\n        webview.evaluateJavaScript_completionHandler(script, null)\n      },\n    },\n  })\n\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    \"document.addEventListener('DOMContentLoaded', function() { document.body.classList.add('__skpm-\" +\n      (typeof MSTheme !== 'undefined' && MSTheme.sharedTheme().isDark()\n        ? 'dark'\n        : 'light') +\n      \"') }, false)\",\n    0,\n    true\n  )\n  webview\n    .configuration()\n    .userContentController()\n    .addUserScript(script)\n\n  NSApplication.sharedApplication().addObserver_forKeyPath_options_context(\n    themeObserver,\n    'effectiveAppearance',\n    NSKeyValueChangeNewKey,\n    null\n  )\n\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n  threadDictionary[browserWindow.id + '.themeObserver'] = themeObserver\n\n  var navigationDelegate = NavigationDelegateClass.new({\n    utils: {\n      setTitle: browserWindow.setTitle.bind(browserWindow),\n      emitBrowserEvent() {\n        try {\n          browserWindow.emit.apply(browserWindow, arguments)\n        } catch (err) {\n          if (\n            typeof process !== 'undefined' &&\n            process.listenerCount &&\n            process.listenerCount('uncaughtException')\n          ) {\n            process.emit('uncaughtException', err, 'uncaughtException')\n          } else {\n            console.error(err)\n            throw err\n          }\n        }\n      },\n      emit() {\n        try {\n          browserWindow.webContents.emit.apply(\n            browserWindow.webContents,\n            arguments\n          )\n        } catch (err) {\n          if (\n            typeof process !== 'undefined' &&\n            process.listenerCount &&\n            process.listenerCount('uncaughtException')\n          ) {\n            process.emit('uncaughtException', err, 'uncaughtException')\n          } else {\n            console.error(err)\n            throw err\n          }\n        }\n      },\n    },\n    state: {\n      wasReady: 0,\n    },\n  })\n\n  webview.setNavigationDelegate(navigationDelegate)\n\n  var webScriptHandler = WebScriptHandlerClass.new({\n    utils: {\n      emit(id, type) {\n        if (!type) {\n          webview.evaluateJavaScript_completionHandler(\n            CONSTANTS.JS_BRIDGE_RESULT_SUCCESS + id + '()',\n            null\n          )\n          return\n        }\n\n        var args = []\n        for (var i = 2; i < arguments.length; i += 1) args.push(arguments[i])\n\n        var listeners = browserWindow.webContents.listeners(type)\n\n        Promise.all(\n          listeners.map(function(l) {\n            return Promise.resolve().then(function() {\n              return l.apply(l, args)\n            })\n          })\n        )\n          .then(function(res) {\n            webview.evaluateJavaScript_completionHandler(\n              CONSTANTS.JS_BRIDGE_RESULT_SUCCESS +\n                id +\n                '(' +\n                JSON.stringify(res) +\n                ')',\n              null\n            )\n          })\n          .catch(function(err) {\n            webview.evaluateJavaScript_completionHandler(\n              CONSTANTS.JS_BRIDGE_RESULT_ERROR +\n                id +\n                '(' +\n                JSON.stringify(err) +\n                ')',\n              null\n            )\n          })\n      },\n      parseWebArguments: parseWebArguments,\n    },\n  })\n\n  webview\n    .configuration()\n    .userContentController()\n    .addScriptMessageHandler_name(webScriptHandler, CONSTANTS.JS_BRIDGE)\n\n  var utils = {\n    emit() {\n      try {\n        browserWindow.emit.apply(browserWindow, arguments)\n      } catch (err) {\n        if (\n          typeof process !== 'undefined' &&\n          process.listenerCount &&\n          process.listenerCount('uncaughtException')\n        ) {\n          process.emit('uncaughtException', err, 'uncaughtException')\n        } else {\n          console.error(err)\n          throw err\n        }\n      }\n    },\n  }\n  if (options.modal) {\n    // find the window of the document\n    var msdocument\n    if (options.parent.type === 'Document') {\n      msdocument = options.parent.sketchObject\n    } else {\n      msdocument = options.parent\n    }\n    if (msdocument && String(msdocument.class()) === 'MSDocumentData') {\n      // we only have an MSDocumentData instead of a MSDocument\n      // let's try to get back to the MSDocument\n      msdocument = msdocument.delegate()\n    }\n    utils.parentWindow = msdocument.windowForSheet()\n  }\n\n  var windowDelegate = WindowDelegateClass.new({\n    utils: utils,\n    panel: panel,\n  })\n\n  panel.setDelegate(windowDelegate)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/set-delegates.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/lib/webview-api.js":
/*!****************************************************************!*\
  !*** ./node_modules/sketch-module-web-view/lib/webview-api.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\")\nvar executeJavaScript = __webpack_require__(/*! ./execute-javascript */ \"./node_modules/sketch-module-web-view/lib/execute-javascript.js\")\n\n// let's try to match https://github.com/electron/electron/blob/master/docs/api/web-contents.md\nmodule.exports = function buildAPI(browserWindow, panel, webview) {\n  var webContents = new EventEmitter()\n\n  webContents.loadURL = browserWindow.loadURL\n\n  webContents.loadFile = function(/* filePath */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.downloadURL = function(/* filePath */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.getURL = function() {\n    return String(webview.url())\n  }\n\n  webContents.getTitle = function() {\n    return String(webview.title())\n  }\n\n  webContents.isDestroyed = function() {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.focus = browserWindow.focus\n  webContents.isFocused = browserWindow.isFocused\n\n  webContents.isLoading = function() {\n    return !!webview.loading()\n  }\n\n  webContents.isLoadingMainFrame = function() {\n    // TODO:\n    return !!webview.loading()\n  }\n\n  webContents.isWaitingForResponse = function() {\n    return !webview.loading()\n  }\n\n  webContents.stop = function() {\n    webview.stopLoading()\n  }\n  webContents.reload = function() {\n    webview.reload()\n  }\n  webContents.reloadIgnoringCache = function() {\n    webview.reloadFromOrigin()\n  }\n  webContents.canGoBack = function() {\n    return !!webview.canGoBack()\n  }\n  webContents.canGoForward = function() {\n    return !!webview.canGoForward()\n  }\n  webContents.canGoToOffset = function(offset) {\n    return !!webview.backForwardList().itemAtIndex(offset)\n  }\n  webContents.clearHistory = function() {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.goBack = function() {\n    webview.goBack()\n  }\n  webContents.goForward = function() {\n    webview.goForward()\n  }\n  webContents.goToIndex = function(index) {\n    var backForwardList = webview.backForwardList()\n    var backList = backForwardList.backList()\n    var backListLength = backList.count()\n    if (backListLength > index) {\n      webview.loadRequest(NSURLRequest.requestWithURL(backList[index]))\n      return\n    }\n    var forwardList = backForwardList.forwardList()\n    if (forwardList.count() > index - backListLength) {\n      webview.loadRequest(\n        NSURLRequest.requestWithURL(forwardList[index - backListLength])\n      )\n      return\n    }\n    throw new Error('Cannot go to index ' + index)\n  }\n  webContents.goToOffset = function(offset) {\n    if (!webContents.canGoToOffset(offset)) {\n      throw new Error('Cannot go to offset ' + offset)\n    }\n    webview.loadRequest(\n      NSURLRequest.requestWithURL(webview.backForwardList().itemAtIndex(offset))\n    )\n  }\n  webContents.isCrashed = function() {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setUserAgent = function(/* userAgent */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.getUserAgent = function() {\n    const userAgent = webview.customUserAgent()\n    return userAgent ? String(userAgent) : undefined\n  }\n  webContents.insertCSS = function(css) {\n    var source =\n      \"var style = document.createElement('style'); style.innerHTML = \" +\n      css.replace(/\"/, '\\\\\"') +\n      '; document.head.appendChild(style);'\n    var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n      source,\n      0,\n      true\n    )\n    webview\n      .configuration()\n      .userContentController()\n      .addUserScript(script)\n  }\n  webContents.insertJS = function(source) {\n    var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n      source,\n      0,\n      true\n    )\n    webview\n      .configuration()\n      .userContentController()\n      .addUserScript(script)\n  }\n  webContents.executeJavaScript = executeJavaScript(webview, browserWindow)\n  webContents.setIgnoreMenuShortcuts = function() {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setAudioMuted = function(/* muted */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.isAudioMuted = function() {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setZoomFactor = function(factor) {\n    webview.setMagnification_centeredAtPoint(factor, CGPointMake(0, 0))\n  }\n  webContents.getZoomFactor = function(callback) {\n    callback(Number(webview.magnification()))\n  }\n  webContents.setZoomLevel = function(level) {\n    // eslint-disable-next-line no-restricted-properties\n    webContents.setZoomFactor(Math.pow(1.2, level))\n  }\n  webContents.getZoomLevel = function(callback) {\n    // eslint-disable-next-line no-restricted-properties\n    callback(Math.log(Number(webview.magnification())) / Math.log(1.2))\n  }\n  webContents.setVisualZoomLevelLimits = function(/* minimumLevel, maximumLevel */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setLayoutZoomLevelLimits = function(/* minimumLevel, maximumLevel */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  // TODO:\n  // webContents.undo = function() {\n  //   webview.undoManager().undo()\n  // }\n  // webContents.redo = function() {\n  //   webview.undoManager().redo()\n  // }\n  // webContents.cut = webview.cut\n  // webContents.copy = webview.copy\n  // webContents.paste = webview.paste\n  // webContents.pasteAndMatchStyle = webview.pasteAsRichText\n  // webContents.delete = webview.delete\n  // webContents.replace = webview.replaceSelectionWithText\n\n  webContents.send = function() {\n    const script =\n      'window.postMessage({' +\n      'isSketchMessage: true,' +\n      \"origin: '\" +\n      String(__command.identifier()) +\n      \"',\" +\n      'args: ' +\n      JSON.stringify([].slice.call(arguments)) +\n      '}, \"*\")'\n    webview.evaluateJavaScript_completionHandler(script, null)\n  }\n\n  webContents.getNativeWebview = function() {\n    return webview\n  }\n\n  browserWindow.webContents = webContents\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/lib/webview-api.js?");

/***/ }),

/***/ "./node_modules/sketch-module-web-view/remote.js":
/*!*******************************************************!*\
  !*** ./node_modules/sketch-module-web-view/remote.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* globals NSThread */\nvar threadDictionary = NSThread.mainThread().threadDictionary()\n\nmodule.exports.getWebview = function(identifier) {\n  return __webpack_require__(/*! ./lib */ \"./node_modules/sketch-module-web-view/lib/index.js\").fromId(identifier) // eslint-disable-line\n}\n\nmodule.exports.isWebviewPresent = function isWebviewPresent(identifier) {\n  return !!threadDictionary[identifier]\n}\n\nmodule.exports.sendToWebview = function sendToWebview(identifier, evalString) {\n  if (!module.exports.isWebviewPresent(identifier)) {\n    return\n  }\n\n  var panel = threadDictionary[identifier]\n  var webview = null\n  var subviews = panel.contentView().subviews()\n  for (var i = 0; i < subviews.length; i += 1) {\n    if (\n      !webview &&\n      !subviews[i].isKindOfClass(WKInspectorWKWebView) &&\n      subviews[i].isKindOfClass(WKWebView)\n    ) {\n      webview = subviews[i]\n    }\n  }\n\n  if (!webview || !webview.evaluateJavaScript_completionHandler) {\n    throw new Error('Webview ' + identifier + ' not found')\n  }\n\n  webview.evaluateJavaScript_completionHandler(evalString, null)\n}\n\n\n//# sourceURL=webpack:///./node_modules/sketch-module-web-view/remote.js?");

/***/ }),

/***/ "./platforms/sketch/src/createChart.js":
/*!*********************************************!*\
  !*** ./platforms/sketch/src/createChart.js ***!
  \*********************************************/
/*! exports provided: default, onShutdown */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onShutdown\", function() { return onShutdown; });\n/* harmony import */ var sketch_module_web_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sketch-module-web-view */ \"./node_modules/sketch-module-web-view/lib/index.js\");\n/* harmony import */ var sketch_module_web_view__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sketch_module_web_view__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sketch_module_web_view_remote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sketch-module-web-view/remote */ \"./node_modules/sketch-module-web-view/remote.js\");\n/* harmony import */ var sketch_module_web_view_remote__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sketch_module_web_view_remote__WEBPACK_IMPORTED_MODULE_1__);\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'sketch/ui'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n\n\nconst webviewIdentifier = \"chart2.webview\";\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n  const options = {\n    identifier: webviewIdentifier,\n    width: 496,\n    height: 400,\n    show: false,\n  };\n\n  const browserWindow = new sketch_module_web_view__WEBPACK_IMPORTED_MODULE_0___default.a(options);\n\n  browserWindow.once(\"ready-to-show\", () => {\n    browserWindow.show();\n  });\n\n  const webContents = browserWindow.webContents;\n\n  webContents.on(\"did-finish-load\", () => {\n    !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'sketch/ui'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).message(\"UI loaded!\");\n  });\n\n  // add a handler for a call from web content's javascript\n  webContents.on(\"nativeLog\", (s) => {\n    !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'sketch/ui'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).message(s);\n    webContents\n      .executeJavaScript(`setRandomNumber(${Math.random()})`)\n      .catch(console.error);\n  });\n\n  browserWindow.loadURL(__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module '../Resources/ui.html'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));\n});\n\nfunction onShutdown() {\n  const existingWebview = Object(sketch_module_web_view_remote__WEBPACK_IMPORTED_MODULE_1__[\"getWebview\"])(webviewIdentifier);\n  if (existingWebview) {\n    existingWebview.close();\n  }\n}\n\n\n//# sourceURL=webpack:///./platforms/sketch/src/createChart.js?");

/***/ }),

/***/ "./platforms/sketch/src/index.js":
/*!***************************************!*\
  !*** ./platforms/sketch/src/index.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createChart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createChart.js */ \"./platforms/sketch/src/createChart.js\");\n\n\n\n//# sourceURL=webpack:///./platforms/sketch/src/index.js?");

/***/ })

/******/ });